// Code generated by protoc-gen-go-dubbo. DO NOT EDIT.

// Source: greet.proto
// Package: greet

package greet

import (
	dubbo_go_hessian2 "github.com/apache/dubbo-go-hessian2"
)

type GreetRequest struct {
	Name string
}

func (x *GreetRequest) JavaClassName() string {
	return "org.apache.dubbo.springboot.demo.GreetRequest"
}

func (x *GreetRequest) String() string {
	e := dubbo_go_hessian2.NewEncoder()
	err := e.Encode(x)
	if err != nil {
		return ""
	}
	return string(e.Buffer())
}

func (x *GreetRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GreetResponse struct {
	Greeting string
}

func (x *GreetResponse) JavaClassName() string {
	return "org.apache.dubbo.springboot.demo.GreetResponse"
}

func (x *GreetResponse) String() string {
	e := dubbo_go_hessian2.NewEncoder()
	err := e.Encode(x)
	if err != nil {
		return ""
	}
	return string(e.Buffer())
}

func (x *GreetResponse) GetGreeting() string {
	if x != nil {
		return x.Greeting
	}
	return ""
}

type Greet2Request struct {
	Name string
}

func (x *Greet2Request) JavaClassName() string {
	return "org.apache.dubbo.springboot.demo.Greet2Request"
}

func (x *Greet2Request) String() string {
	e := dubbo_go_hessian2.NewEncoder()
	err := e.Encode(x)
	if err != nil {
		return ""
	}
	return string(e.Buffer())
}

func (x *Greet2Request) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Greet2Response struct {
	Greeting string
}

func (x *Greet2Response) JavaClassName() string {
	return "org.apache.dubbo.springboot.demo.Greet2Response"
}

func (x *Greet2Response) String() string {
	e := dubbo_go_hessian2.NewEncoder()
	err := e.Encode(x)
	if err != nil {
		return ""
	}
	return string(e.Buffer())
}

func (x *Greet2Response) GetGreeting() string {
	if x != nil {
		return x.Greeting
	}
	return ""
}

func init() {
	dubbo_go_hessian2.RegisterPOJO(new(GreetRequest))
	dubbo_go_hessian2.RegisterPOJO(new(GreetResponse))
	dubbo_go_hessian2.RegisterPOJO(new(Greet2Request))
	dubbo_go_hessian2.RegisterPOJO(new(Greet2Response))
}
