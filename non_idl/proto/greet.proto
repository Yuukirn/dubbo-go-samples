/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package greet;

option go_package = "github.com/apache/dubbo-go-samples/non_idl/proto;greet";

import "hessian2_extend/hessian2_extend.proto";
import "java_sql_time/java_sql_time.proto";
import "java8_time/java8_time.proto";
import "java_exception/java_exception.proto";
import "java_util/java_util.proto";
import "java_math/java_math.proto";
import "self_extension/self_extension.proto";

enum GreetEnum {
  GREET_ENUM_0 = 0;
  GREET_ENUM_1 = 1;
  GREET_ENUM_2 = 2;
  GREET_ENUM_3 = 3;
  GREET_ENUM_4 = 4;

  option (hessian2_extend.enum_extend) = {
    java_class_name: "org.apache.greet.GreetEnum";
  };
}

message GreetRequest {
  message Internal {
    int32 num = 1;
    option (hessian2_extend.message_extend) = {
      java_class_name: "org.apache.greet.Inner";
      is_inheritance: true;
    };
  }

  string name = 1;
  GreetEnum way = 2;
  Internal inner = 3;
  java_sql_time.Time time = 4;
  java_sql_time.Date date = 5;
  java8_time.Duration duration = 6;
  java8_time.ZonedDateTime zoned_date_time = 7;
  java_exception.RuntimeException runtime_exception = 8;
  java_util.UUID uuid = 9;
  self_extension.Time self_time = 10;
  java_math.Integer big_integer = 11;

  option (hessian2_extend.message_extend) = {
    java_class_name: "org.apache.greet.GreetRequest";
  };
}

message GreetResponse {
  string greeting = 1;
  option (hessian2_extend.message_extend) = {
    java_class_name: "org.apache.greet.GreetResponse";
  };
}

message Greet2Request {
  string name = 1;
  int32 age = 2;
  int64 time = 3;

  option (hessian2_extend.message_extend) = {
    extend_args: true;
  };
}

message Greet2Response {
  string greeting = 1;
  option (hessian2_extend.message_extend) = {
    extend_args: true;
  };
}

service GreetService {
  rpc Greet(GreetRequest) returns (GreetResponse) {
    option (hessian2_extend.method_extend) = {
      method_name: "greet";
    };
  }

  rpc Greet2(Greet2Request) returns (Greet2Response) {
    // NOTE: service will panic when go-server use override method
    option (hessian2_extend.method_extend) = {
      method_name: "greet";
    };
  }
}